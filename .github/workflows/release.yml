name: Release collection
on: workflow_dispatch
  
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get current version
        id: cversion
        run: echo "::set-output name=version::$(grep version galaxy.yml | awk -F'"' '{ print $2 }')"
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade ansible
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Copy files and directories to source
        run: |
          mkdir -p build/src
          cp $files build/src
          cp -rf $directories build/src
        env:
          files: "README.md LICENSE galaxy.yml"
          directories: "playbooks"

      - name: Build Ansible Collection
        run: ansible-galaxy collection build build/src --force

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ steps.cversion.outputs.version }}.tar.gz
          tag_name: ${{ steps.cversion.outputs.version }}
          release_name: Release v${{ steps.cversion.outputs.version }}
          body: |
            # Ansible Collection: ${{ github.repository_owner }}.${{ github.event.repository.name }}
            ![Release](https://github.com/jonsible/iac/actions/workflows/release.yml/badge.svg)
            Install with:
            ```sh
            ansible-galaxy collection install ${{ github.repository_owner }}.${{ github.event.repository.name }}
            # or
            ansible-galaxy collection install ${{ github.repositoryUrl }}
            ```
            The requirements.yml needs to have the following format and content:
            ```yaml
            collections:
                - ${{ github.repositoryUrl }}
            ```

      - name: Deploy Ansible collection to Galaxy
        run: ansible-galaxy collection publish ${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ steps.cversion.outputs.version }}.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}