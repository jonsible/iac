# code: language=ansible
---
- name: Import common_hanlders
  ansible.builtin.import_role:
    name: jonsible.iac.common_handlers

- name: Update cache
  become: true
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install wireguard
  become: true
  ansible.builtin.apt:
    name: wireguard
    state: present

- name: Generate private key
  become: true
  ansible.builtin.shell:
    creates: /etc/wireguard/privatekey
    cmd: wg genkey > /etc/wireguard/privatekey

- name: Generate public key
  become: true
  ansible.builtin.shell:
    creates: /etc/wireguard/publickey
    cmd: wg pubkey < /etc/wireguard/privatekey > /etc/wireguard/publickey

- name: Retrieve private key
  become: true
  ansible.builtin.slurp:
    src: /etc/wireguard/privatekey
  register: wg_private_b64

- name: Retrieve public key
  become: true
  ansible.builtin.slurp:
    src: /etc/wireguard/publickey
  register: wg_public_b64

- name: Set decoded fact
  ansible.builtin.set_fact:
    wg_public: "{{ wg_public_b64['content'] | b64decode | trim }}"
    wg_private: "{{ wg_private_b64['content'] | b64decode | trim }}"

- name: Find all k3s hostvars
  ansible.builtin.set_fact:
    k3s_hostvars: "{{ groups['k3s'] | map('extract', hostvars) | jonsible.iac.mapattributes(['ansible_nodename', 'wg_public']) }}"

- name: Create wireguard configuration (netplan)
  become: true
  ansible.builtin.template:
    src: 80-wireguard.yaml.j2
    dest: /etc/netplan/80-wireguard.yaml
    mode: 0600
    lstrip_blocks: true
  notify:
    - "netplan-apply"
    - "systemd-networkd-restart"

- name: Allowing Wireguard
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    protocol: udp
    destination_port: "{{ wg_port }}"
    jump: ACCEPT
    comment: "Wireguard port"
  notify:
    - "iptables-save"
