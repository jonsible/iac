# code: language=ansible
- name: Create wireguard chain
  become: true
  ansible.builtin.iptables:
    chain: WG-INPUT
    chain_management: true
  notify:
    - "iptables-save"

- name: Add wireguard chain to input chain
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    in_interface: "{{ wg_if }}"
    jump: WG-INPUT
    action: append
  notify:
    - "iptables-save"

- name: Allow kube API (wireguard)
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: WG-INPUT
    protocol: tcp
    destination_port: "6443"
    jump: ACCEPT
    comment: "kube API server"
    action: insert
  notify:
    - "iptables-save"

- name: Allow etcd (wireguard)
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: WG-INPUT
    protocol: tcp
    destination_port: "2379:2380"
    jump: ACCEPT
    comment: "etcd"
    action: insert
  notify:
    - "iptables-save"

- name: Allow kubelet metrics (wireguard)
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: WG-INPUT
    protocol: tcp
    destination_port: "10250"
    jump: ACCEPT
    comment: "kubelet metrics"
    action: insert
  notify:
    - "iptables-save"

- name: Allow flannel wireguard
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    protocol: udp
    destination_port: "51820"
    jump: ACCEPT
    comment: "Flannel Wireguard"
    action: insert
  notify:
    - "iptables-save"

- name: Forward external DNS port
  become: true
  ansible.builtin.iptables:
    table: nat
    action: insert
    chain: PREROUTING
    protocol: "{{ item }}"
    source: "{{ wg_network }}"
    in_interface: "{{ wg_if }}"
    destination_port: "53"
    jump: REDIRECT
    to_ports: "30053"
    comment: "Forward DNS to NodePort 30053"
  loop:
    - udp
    - tcp
  notify:
    - "iptables-save"

- name: Allow DNS (wireguard)
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: WG-INPUT
    protocol: "{{ item }}"
    in_interface: "{{ wg_if }}"
    destination_port: "53"
    jump: ACCEPT
    comment: "Allow DNS (wireguard)"
    action: insert
  loop:
    - udp
    - tcp
  notify:
    - "iptables-save"

- name: Allow DNS (nodeport)
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: WG-INPUT
    protocol: "{{ item }}"
    in_interface: "{{ wg_if }}"
    destination_port: "30053"
    jump: ACCEPT
    comment: "Allow DNS (nodeport)"
    action: insert
  loop:
    - udp
    - tcp
  notify:
    - "iptables-save"
