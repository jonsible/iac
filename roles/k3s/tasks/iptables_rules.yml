# code: language=ansible

- name: Create chains
  become: true
  ansible.builtin.iptables:
    chain: "{{ item }}"
    chain_management: true
  loop:
    - WG-INPUT
    - FAILOVER-INPUT
    - MAIN-INPUT
  notify:
    - "iptables-save"

- name: Traffic to wireguard IP goes to WG-INPUT
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    in_interface: "{{ wg_if }}"
    jump: WG-INPUT
    action: append
  notify:
    - "iptables-save"

- name: Traffic to failover IPs goes to FAILOVER-INPUT
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    match_set: failover
    match_set_flags: dst
    jump: FAILOVER-INPUT
    action: insert
  notify:
    - "iptables-save"

- name: Traffic to main IPs goes to MAIN-INPUT
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    match_set: main
    match_set_flags: dst
    jump: MAIN-INPUT
    action: insert
  notify:
    - "iptables-save"

- name: Allow traffic on wireguard interface
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: WG-INPUT
    destination_port: "{{ item.destination_port }}"
    protocol: "{{ item.protocol }}"
    comment: "{{ item.comment }}"
    jump: ACCEPT
    action: insert
  notify:
    - "iptables-save"
  loop:
    - protocol: tcp
      destination_port: 6443
      comment: "Allow kube API"
    - protocol: tcp
      destination_port: 2379:2380
      comment: "Allow etcd"
    - protocol: tcp
      destination_port: 10250
      comment: "Allow kubelet metrics"
    - protocol: tcp
      destination_port: 443
      comment: "Allow HTTPS"
    - protocol: tcp
      destination_port: 53
      comment: "Allow DNS"
    - protocol: udp
      destination_port: 53
      comment: "Allow DNS"

- name: Allow flannel wireguard
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    protocol: udp
    destination_port: "51820"
    jump: ACCEPT
    comment: "Flannel Wireguard"
    action: insert
  notify:
    - "iptables-save"

- name: Allow HTTPS from Cloudflare
  become: true
  ansible.builtin.iptables:
    table: filter
    chain: FAILOVER-INPUT
    protocol: tcp
    destination_port: 443
    jump: ACCEPT
    comment: "Allow HTTPS from Cloudflare"
    match_set: cloudflare
    match_set_flags: src
    action: insert
  notify:
    - "iptables-save"
